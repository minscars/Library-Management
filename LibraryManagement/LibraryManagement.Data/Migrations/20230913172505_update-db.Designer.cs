// <auto-generated />
using System;
using LibraryManagement.Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagement.Data.Migrations
{
    [DbContext(typeof(LibraryManagementDbContext))]
    [Migration("20230913172505_update-db")]
    partial class updatedb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagement.Data.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(3668));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(3846));

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Image = "Tìm mình trong thế giới hậu tuổi thơ.jpg",
                            IsDeleted = false,
                            Name = "Tìm mình trong thế giới hậu tuổi thơ"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Image = "Điều kỳ diệu của tiệm tạp hóa Namiya.jpg",
                            IsDeleted = false,
                            Name = "Điều kỳ diệu của tiệm tạp hóa Namiya"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Image = "Rồi một ngày cuộc sống hóa hư vô.jpg",
                            IsDeleted = false,
                            Name = "Rồi một ngày cuộc sống hóa hư vô"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Image = "Quán ăn nơi góc hẻm.jpg",
                            IsDeleted = false,
                            Name = "Quán ăn nơi góc hẻm"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Image = "Ngắm tuổi trẻ quay cuồng trong tỉnh lặng.jpg",
                            IsDeleted = false,
                            Name = "Ngắm tuổi trẻ quay cuồng trong tỉnh lặng"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Image = "Doraemon truyện dài Nobita và chú khủng long.jpg",
                            IsDeleted = false,
                            Name = "Doraemon truyện dài: Nobita và chú khủng long"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Image = "Doraemon và Nobita ở thế giới phép thuật.jpg",
                            IsDeleted = false,
                            Name = "Doraemon và Nobita ở thế giới phép thuật"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.BorrowBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BorrowTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DueTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BorrowBills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.BorrowBillDetail", b =>
                {
                    b.Property<int>("BorrowBillId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("BorrowBillId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("BorrowBillDetails");

                    b.HasData(
                        new
                        {
                            BorrowBillId = 1,
                            BookId = 1,
                            Amount = 1
                        },
                        new
                        {
                            BorrowBillId = 1,
                            BookId = 2,
                            Amount = 1
                        },
                        new
                        {
                            BorrowBillId = 1,
                            BookId = 3,
                            Amount = 1
                        });
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(4947));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(5091));

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Tiểu thuyết"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Sách tâm lý"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Truyện tranh"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("default.png");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("RegisteredDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(4491));

                    b.Property<DateTime?>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(4635));

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "3/2, Ninh Kieu, Can Tho",
                            Avatar = "myAvatar.jpg",
                            Email = "minhkhalectu@gmail.com",
                            Name = "Le Minh Kha",
                            Password = "leminhkha123",
                            Phone = "0398897634",
                            RegisteredDate = new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(7576),
                            UpdatedDate = new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(7580)
                        },
                        new
                        {
                            Id = 2,
                            Address = "622/10, phuong 13, Cong Hoa, Tan Binh. Tp. HCM",
                            Avatar = "myChongiu.jpg",
                            Email = "silasnguyen@gmail.com",
                            Name = "Nguyen Tung Lam",
                            Password = "chongiu23",
                            Phone = "0338307449",
                            RegisteredDate = new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(7581),
                            UpdatedDate = new DateTime(2023, 9, 14, 0, 25, 5, 787, DateTimeKind.Local).AddTicks(7581)
                        });
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.Book", b =>
                {
                    b.HasOne("LibraryManagement.Data.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.BorrowBill", b =>
                {
                    b.HasOne("LibraryManagement.Data.Models.User", "User")
                        .WithMany("BorrowBills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.BorrowBillDetail", b =>
                {
                    b.HasOne("LibraryManagement.Data.Models.Book", "Book")
                        .WithMany("BorrowBillDetail")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagement.Data.Models.BorrowBill", "BorrowBill")
                        .WithMany("BorrowBillDetail")
                        .HasForeignKey("BorrowBillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("BorrowBill");
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.Book", b =>
                {
                    b.Navigation("BorrowBillDetail");
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.BorrowBill", b =>
                {
                    b.Navigation("BorrowBillDetail");
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagement.Data.Models.User", b =>
                {
                    b.Navigation("BorrowBills");
                });
#pragma warning restore 612, 618
        }
    }
}
